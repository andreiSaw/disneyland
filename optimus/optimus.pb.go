// Code generated by protoc-gen-go. DO NOT EDIT.
// source: optimus.proto

/*
Package optimus is a generated protocol buffer package.

It is generated from these files:
	optimus.proto

It has these top-level messages:
	Point
	ListOfPoints
	RequestWithId
	ListPointsRequest
*/
package optimus

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Point_Status int32

const (
	Point_PENDING   Point_Status = 0
	Point_PULLED    Point_Status = 1
	Point_RUNNING   Point_Status = 2
	Point_FAILED    Point_Status = 3
	Point_COMPLETED Point_Status = 4
)

var Point_Status_name = map[int32]string{
	0: "PENDING",
	1: "PULLED",
	2: "RUNNING",
	3: "FAILED",
	4: "COMPLETED",
}
var Point_Status_value = map[string]int32{
	"PENDING":   0,
	"PULLED":    1,
	"RUNNING":   2,
	"FAILED":    3,
	"COMPLETED": 4,
}

func (x Point_Status) String() string {
	return proto.EnumName(Point_Status_name, int32(x))
}
func (Point_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Point_Kind int32

const (
	Point_POINT Point_Kind = 0
	Point_JOB   Point_Kind = 1
	Point_ETC   Point_Kind = 2
)

var Point_Kind_name = map[int32]string{
	0: "POINT",
	1: "JOB",
	2: "ETC",
}
var Point_Kind_value = map[string]int32{
	"POINT": 0,
	"JOB":   1,
	"ETC":   2,
}

func (x Point_Kind) String() string {
	return proto.EnumName(Point_Kind_name, int32(x))
}
func (Point_Kind) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type Point struct {
	Project     string       `protobuf:"bytes,1,opt,name=project" json:"project,omitempty"`
	Id          uint64       `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Status      Point_Status `protobuf:"varint,3,opt,name=status,enum=Point_Status" json:"status,omitempty"`
	Coordinate  string       `protobuf:"bytes,4,opt,name=coordinate" json:"coordinate,omitempty"`
	MetricValue string       `protobuf:"bytes,5,opt,name=metric_value,json=metricValue" json:"metric_value,omitempty"`
	Metadata    string       `protobuf:"bytes,6,opt,name=metadata" json:"metadata,omitempty"`
	Input       string       `protobuf:"bytes,7,opt,name=input" json:"input,omitempty"`
	Output      string       `protobuf:"bytes,8,opt,name=output" json:"output,omitempty"`
	Kind        Point_Kind   `protobuf:"varint,9,opt,name=kind,enum=Point_Kind" json:"kind,omitempty"`
}

func (m *Point) Reset()                    { *m = Point{} }
func (m *Point) String() string            { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()               {}
func (*Point) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Point) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *Point) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Point) GetStatus() Point_Status {
	if m != nil {
		return m.Status
	}
	return Point_PENDING
}

func (m *Point) GetCoordinate() string {
	if m != nil {
		return m.Coordinate
	}
	return ""
}

func (m *Point) GetMetricValue() string {
	if m != nil {
		return m.MetricValue
	}
	return ""
}

func (m *Point) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *Point) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *Point) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *Point) GetKind() Point_Kind {
	if m != nil {
		return m.Kind
	}
	return Point_POINT
}

type ListOfPoints struct {
	Points []*Point `protobuf:"bytes,1,rep,name=points" json:"points,omitempty"`
}

func (m *ListOfPoints) Reset()                    { *m = ListOfPoints{} }
func (m *ListOfPoints) String() string            { return proto.CompactTextString(m) }
func (*ListOfPoints) ProtoMessage()               {}
func (*ListOfPoints) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListOfPoints) GetPoints() []*Point {
	if m != nil {
		return m.Points
	}
	return nil
}

type RequestWithId struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *RequestWithId) Reset()                    { *m = RequestWithId{} }
func (m *RequestWithId) String() string            { return proto.CompactTextString(m) }
func (*RequestWithId) ProtoMessage()               {}
func (*RequestWithId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RequestWithId) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListPointsRequest struct {
	HowMany uint32 `protobuf:"varint,1,opt,name=how_many,json=howMany" json:"how_many,omitempty"`
}

func (m *ListPointsRequest) Reset()                    { *m = ListPointsRequest{} }
func (m *ListPointsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListPointsRequest) ProtoMessage()               {}
func (*ListPointsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListPointsRequest) GetHowMany() uint32 {
	if m != nil {
		return m.HowMany
	}
	return 0
}

func init() {
	proto.RegisterType((*Point)(nil), "Point")
	proto.RegisterType((*ListOfPoints)(nil), "ListOfPoints")
	proto.RegisterType((*RequestWithId)(nil), "RequestWithId")
	proto.RegisterType((*ListPointsRequest)(nil), "ListPointsRequest")
	proto.RegisterEnum("Point_Status", Point_Status_name, Point_Status_value)
	proto.RegisterEnum("Point_Kind", Point_Kind_name, Point_Kind_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Optimus service

type OptimusClient interface {
	CreatePoint(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error)
	GetPoint(ctx context.Context, in *RequestWithId, opts ...grpc.CallOption) (*Point, error)
	ListPoints(ctx context.Context, in *ListPointsRequest, opts ...grpc.CallOption) (*ListOfPoints, error)
	ModifyPoint(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error)
	PullPendingPoints(ctx context.Context, in *ListPointsRequest, opts ...grpc.CallOption) (*ListOfPoints, error)
}

type optimusClient struct {
	cc *grpc.ClientConn
}

func NewOptimusClient(cc *grpc.ClientConn) OptimusClient {
	return &optimusClient{cc}
}

func (c *optimusClient) CreatePoint(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := grpc.Invoke(ctx, "/Optimus/CreatePoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *optimusClient) GetPoint(ctx context.Context, in *RequestWithId, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := grpc.Invoke(ctx, "/Optimus/GetPoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *optimusClient) ListPoints(ctx context.Context, in *ListPointsRequest, opts ...grpc.CallOption) (*ListOfPoints, error) {
	out := new(ListOfPoints)
	err := grpc.Invoke(ctx, "/Optimus/ListPoints", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *optimusClient) ModifyPoint(ctx context.Context, in *Point, opts ...grpc.CallOption) (*Point, error) {
	out := new(Point)
	err := grpc.Invoke(ctx, "/Optimus/ModifyPoint", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *optimusClient) PullPendingPoints(ctx context.Context, in *ListPointsRequest, opts ...grpc.CallOption) (*ListOfPoints, error) {
	out := new(ListOfPoints)
	err := grpc.Invoke(ctx, "/Optimus/PullPendingPoints", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Optimus service

type OptimusServer interface {
	CreatePoint(context.Context, *Point) (*Point, error)
	GetPoint(context.Context, *RequestWithId) (*Point, error)
	ListPoints(context.Context, *ListPointsRequest) (*ListOfPoints, error)
	ModifyPoint(context.Context, *Point) (*Point, error)
	PullPendingPoints(context.Context, *ListPointsRequest) (*ListOfPoints, error)
}

func RegisterOptimusServer(s *grpc.Server, srv OptimusServer) {
	s.RegisterService(&_Optimus_serviceDesc, srv)
}

func _Optimus_CreatePoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Point)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OptimusServer).CreatePoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Optimus/CreatePoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OptimusServer).CreatePoint(ctx, req.(*Point))
	}
	return interceptor(ctx, in, info, handler)
}

func _Optimus_GetPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestWithId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OptimusServer).GetPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Optimus/GetPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OptimusServer).GetPoint(ctx, req.(*RequestWithId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Optimus_ListPoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPointsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OptimusServer).ListPoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Optimus/ListPoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OptimusServer).ListPoints(ctx, req.(*ListPointsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Optimus_ModifyPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Point)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OptimusServer).ModifyPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Optimus/ModifyPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OptimusServer).ModifyPoint(ctx, req.(*Point))
	}
	return interceptor(ctx, in, info, handler)
}

func _Optimus_PullPendingPoints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPointsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OptimusServer).PullPendingPoints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Optimus/PullPendingPoints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OptimusServer).PullPendingPoints(ctx, req.(*ListPointsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Optimus_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Optimus",
	HandlerType: (*OptimusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePoint",
			Handler:    _Optimus_CreatePoint_Handler,
		},
		{
			MethodName: "GetPoint",
			Handler:    _Optimus_GetPoint_Handler,
		},
		{
			MethodName: "ListPoints",
			Handler:    _Optimus_ListPoints_Handler,
		},
		{
			MethodName: "ModifyPoint",
			Handler:    _Optimus_ModifyPoint_Handler,
		},
		{
			MethodName: "PullPendingPoints",
			Handler:    _Optimus_PullPendingPoints_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "optimus.proto",
}

func init() { proto.RegisterFile("optimus.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xc1, 0x8f, 0x93, 0x40,
	0x14, 0xc6, 0x0b, 0xa5, 0xd0, 0x3e, 0x96, 0x0d, 0xfb, 0x62, 0xcc, 0xd8, 0x83, 0xad, 0xa8, 0x49,
	0x4f, 0x24, 0xd6, 0x8b, 0x57, 0x6d, 0x71, 0x83, 0xb6, 0x40, 0xb0, 0xab, 0xc7, 0x0d, 0x96, 0x59,
	0x3b, 0xda, 0x32, 0x08, 0x83, 0x9b, 0xfe, 0xb3, 0xfe, 0x19, 0x9e, 0xcd, 0x0c, 0xac, 0xd6, 0x18,
	0x0f, 0x9e, 0x98, 0xf7, 0x7d, 0x2f, 0xdf, 0xfb, 0x31, 0xf3, 0xc0, 0xe1, 0xa5, 0x60, 0x87, 0xa6,
	0xf6, 0xcb, 0x8a, 0x0b, 0xee, 0xfd, 0xd0, 0x61, 0x90, 0x70, 0x56, 0x08, 0x24, 0x60, 0x95, 0x15,
	0xff, 0x4c, 0xb7, 0x82, 0x68, 0x53, 0x6d, 0x36, 0x4a, 0xef, 0x4a, 0x3c, 0x07, 0x9d, 0xe5, 0x44,
	0x9f, 0x6a, 0x33, 0x23, 0xd5, 0x59, 0x8e, 0x4f, 0xc1, 0xac, 0x45, 0x26, 0x9a, 0x9a, 0xf4, 0xa7,
	0xda, 0xec, 0x7c, 0xee, 0xf8, 0x2a, 0xc1, 0x7f, 0xa7, 0xc4, 0xb4, 0x33, 0xf1, 0x21, 0xc0, 0x96,
	0xf3, 0x2a, 0x67, 0x45, 0x26, 0x28, 0x31, 0x54, 0xe6, 0x89, 0x82, 0x8f, 0xe0, 0xec, 0x40, 0x45,
	0xc5, 0xb6, 0xd7, 0xdf, 0xb2, 0x7d, 0x43, 0xc9, 0x40, 0x75, 0xd8, 0xad, 0xf6, 0x5e, 0x4a, 0x38,
	0x86, 0xe1, 0x81, 0x8a, 0x2c, 0xcf, 0x44, 0x46, 0x4c, 0x65, 0xff, 0xaa, 0xf1, 0x1e, 0x0c, 0x58,
	0x51, 0x36, 0x82, 0x58, 0xca, 0x68, 0x0b, 0xbc, 0x0f, 0x26, 0x6f, 0x84, 0x94, 0x87, 0x4a, 0xee,
	0x2a, 0x9c, 0x80, 0xf1, 0x85, 0x15, 0x39, 0x19, 0x29, 0x62, 0xbb, 0x23, 0x7e, 0xcb, 0x8a, 0x3c,
	0x55, 0x86, 0x17, 0x82, 0xd9, 0xf2, 0xa3, 0x0d, 0x56, 0x12, 0x44, 0xcb, 0x30, 0xba, 0x74, 0x7b,
	0x08, 0x60, 0x26, 0x57, 0xab, 0x55, 0xb0, 0x74, 0x35, 0x69, 0xa4, 0x57, 0x51, 0x24, 0x0d, 0x5d,
	0x1a, 0xaf, 0x5f, 0x86, 0xd2, 0xe8, 0xa3, 0x03, 0xa3, 0x45, 0xbc, 0x4e, 0x56, 0xc1, 0x26, 0x58,
	0xba, 0x86, 0xf7, 0x18, 0x0c, 0x19, 0x8c, 0x23, 0x18, 0x24, 0x71, 0x18, 0x6d, 0xdc, 0x1e, 0x5a,
	0xd0, 0x7f, 0x13, 0xbf, 0x72, 0x35, 0x79, 0x08, 0x36, 0x0b, 0x57, 0xf7, 0x7c, 0x38, 0x5b, 0xb1,
	0x5a, 0xc4, 0x37, 0x8a, 0x44, 0xde, 0x96, 0x59, 0xaa, 0x13, 0xd1, 0xa6, 0xfd, 0x99, 0x3d, 0x37,
	0x5b, 0xc4, 0xb4, 0x53, 0xbd, 0x09, 0x38, 0x29, 0xfd, 0xda, 0xd0, 0x5a, 0x7c, 0x60, 0x62, 0x17,
	0xe6, 0xdd, 0xab, 0x68, 0x77, 0xaf, 0xe2, 0xf9, 0x70, 0x21, 0x03, 0xdb, 0xb8, 0xae, 0x15, 0x1f,
	0xc0, 0x70, 0xc7, 0x6f, 0xaf, 0x0f, 0x59, 0x71, 0x54, 0xad, 0x4e, 0x6a, 0xed, 0xf8, 0xed, 0x3a,
	0x2b, 0x8e, 0xf3, 0xef, 0x1a, 0x58, 0x71, 0xbb, 0x0b, 0x38, 0x01, 0x7b, 0x51, 0xd1, 0x4c, 0xd0,
	0x76, 0x15, 0xba, 0xd9, 0xe3, 0xee, 0xeb, 0xf5, 0xf0, 0x09, 0x0c, 0x2f, 0x69, 0x9b, 0x8d, 0xe7,
	0xfe, 0x1f, 0x20, 0x27, 0x5d, 0xcf, 0x00, 0x7e, 0x23, 0x20, 0xfa, 0x7f, 0xf1, 0x8c, 0x1d, 0xff,
	0xf4, 0xa7, 0xbd, 0x9e, 0x9c, 0xbc, 0xe6, 0x39, 0xbb, 0x39, 0xfe, 0x6b, 0xf2, 0x0b, 0xb8, 0x48,
	0x9a, 0xfd, 0x3e, 0xa1, 0x45, 0xce, 0x8a, 0x4f, 0xff, 0x11, 0xfd, 0xd1, 0x54, 0x1b, 0xfe, 0xfc,
	0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5f, 0xbd, 0x2d, 0x34, 0xf2, 0x02, 0x00, 0x00,
}
